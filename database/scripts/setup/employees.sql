CREATE TYPE ACCESS AS ENUM ('ADMIN', 'CEO', 'CURATOR', 'STREAMER_UNILIVE', 'STREAMER_BACKSTAGE');
CREATE TYPE STREAMER_STREAM AS ENUM ('STREAM_1', 'STREAM_2', 'STREAM_3');
CREATE TYPE STREAMER_GROUP AS ENUM ('GROUP_1', 'GROUP_2', 'GROUP_3');

CREATE TABLE employees
(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    login VARCHAR(100) CHECK (LENGTH(login) >= 5 AND login != LOWER(login)) NOT NULL,
    password CHAR(60) NOT NULL,
    access ACCESS NOT NULL,
    streams STREAMER_STREAM[] NOT NULL DEFAULT '{}',
    responsibility STREAMER_GROUP,
    created TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE FUNCTION employees_sync_updated() RETURNS TRIGGER
LANGUAGE plpgsql VOLATILE LEAKPROOF STRICT PARALLEL SAFE AS $$
BEGIN
	NEW.updated = NOW();
	RETURN NEW;
END $$;
CREATE TRIGGER employees_sync_updated_trigger BEFORE UPDATE ON employees FOR EACH ROW EXECUTE FUNCTION employees_sync_updated();